# ===========================================================
# 1. 基礎設定 (跟之前一樣)
# ===========================================================

# 使用 turn_left() 來定義 turn_right()
def turn_right():
    for i in range(3):
        turn_left()

# ===========================================================
# 2. 設定世界
# 這次我們用一個大一點的世界，螺旋效果會更明顯
# ===========================================================

# 設定一個 11x11 的世界
WORLD_SIZE = 11
RUR.set_world_size(WORLD_SIZE, WORLD_SIZE)

# 將終點「家」設定在世界的中心
# 對於奇數大小的世界，中心點是 (大小+1)/2
CENTER = (WORLD_SIZE + 1) // 2
RUR.add_final_position("house", CENTER, CENTER)

# Reeborg 預設從 (1, 1) 面向東方開始

# ===========================================================
# 3. 螺旋移動邏輯
# ===========================================================

# 初始的路徑長度是世界大小減 1
# 在 11x11 的世界裡，第一段路要走 10 步
path_length = WORLD_SIZE - 1

# 當路徑長度還大於 0 時，持續移動
while path_length > 0:

    # 螺旋的每一圈包含兩段相同長度的路徑
    # 例如：走 10 步, 右轉, 走 10 步, 右轉
    # 然後下一圈變成：走 9 步, 右轉, 走 9 步, 右轉
    for _ in range(2):
        # 沿著當前路徑長度移動
        for i in range(path_length):
            # 在每走一步之前，都檢查是否已到達終點
            if at_goal():
                # 如果已到達，就提前結束所有迴圈
                break
            move()
        
        if at_goal():
            break

        # 走完一段直線後，向右轉
        turn_right()
    
    if at_goal():
        break

    # 完成兩段路徑後，將下一段路徑的長度減 1
    path_length -= 1